{"version":3,"sources":["../../../../src/modules/cache/methods/get.js"],"names":["ERROR_INFO","module","action","plugin","request","key","setCb","tags","Promise","reject","property","undefined","Array","isArray","client","hgetall","then","__success","catch","err","log","error","res","callSetIfCallbackExists","act","JSON","parse","value","parseReviver","app","resolve","promise","search","Date"],"mappings":"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","file":"get.js","sourcesContent":["import isString from 'lodash.isstring';\nimport isFunction from 'lodash.isfunction';\nimport { MODULE_NAME, ACTION_NAME_GET } from '../constants';\nimport { PIN_CACHE_SET } from '../pins';\nimport { PIN_TAGS_HAS } from '../../pins';\nimport internalError from '../../../errors/internal-error';\nimport propertyIsRequiredError from '../../../errors/property-is-required-error';\nimport tagsMustBeFunctionOrUndefinedError from './../errors/setCb-must-be-function-or-undefined';\nimport tagsMustBeArrayOrUndefinedError from './../errors/tags-must-be-array-or-undefined';\n\nconst ERROR_INFO = { module: MODULE_NAME, action: ACTION_NAME_GET };\n\n/**\n * Получает значение ключа из кеша\n * - если передан метод setCb вызовет получение нового значения ключа если такового нет\n *\n * @param {object} plugin         Экземпляр плагина\n * @returns {function({key?: *, setCb?: *, tags?: *}): Promise}\n */\nexport default (plugin) => (request) => {\n  const { key, setCb, tags } = request;\n  \n  if (!isString(key) || key === ''|| key === '*') {\n    return Promise.reject(propertyIsRequiredError({ ...ERROR_INFO, property: 'key' }));\n  }\n  \n  if (!isFunction(setCb) && setCb !== undefined) {\n    return Promise.reject(tagsMustBeFunctionOrUndefinedError(ERROR_INFO));\n  }\n  \n  if (!Array.isArray(tags) && tags !== undefined) {\n    return Promise.reject(tagsMustBeArrayOrUndefinedError(ERROR_INFO));\n  }\n  \n  return plugin.client.hgetall(key)\n    .then(__success)\n    .catch(err => {\n      request.log.error(err);\n      return Promise.reject(internalError(request, err, ERROR_INFO));\n    });\n  \n  function __success(res) {\n    // Запрашиваемый ключ отсутвует\n    if (res === null) {\n      // запустим проверку на обновление по setCb\n      return callSetIfCallbackExists(request, { key, setCb, tags });\n    }\n    \n    // Проверим актуальность тегов\n    return request.act({ ...PIN_TAGS_HAS, tags: JSON.parse(res.tags) })\n      .then(\n        // Если теги актуальны - вернем результат\n        () => JSON.parse(res.value, parseReviver),\n        // Иначе запустим проверку на обновление\n        () => callSetIfCallbackExists(request, { key, setCb, tags })\n      );\n  }\n};\n\n/**\n * Вызывает функцию setCb если он был передан для установки нового значения ключа в кеше\n *\n * @param {app} app               Экземпляр библиотеки MicroJS\n * @param {string} key            Ключ кеша\n * @param {function} [setCb]      Функция получения нового значения\n * @param {Array<string>} [tags]  Список тегов для установки нового значения\n *\n * @returns {Promise<null|*>}     Вернет новое значение для ключа\n */\nfunction callSetIfCallbackExists(app, { key, setCb, tags }) {\n  return new Promise((resolve, reject) => {\n    if (isFunction(setCb)) {\n      let promise = setCb(key);\n    \n      if (!promise || !('then' in promise && isFunction(promise.then))) {\n        promise = Promise.resolve(promise);\n      }\n    \n      return promise\n        .then(value => app\n          .act({ ...PIN_CACHE_SET, key, value, tags })\n          .then(() => value)\n        )\n        .then(resolve, reject);\n    }\n  \n    return resolve(null);\n  });\n}\n\n/**\n * Функция вызывается для каждой пары ключ / значение при JSON.parse\n * - нужны чтобы корректно распарсить и восстановить дату в виде объекта Date\n *\n * @param {string} key\n * @param {*} value\n * @returns {*}\n */\nfunction parseReviver(key, value) {\n  if (!!value && !!value.search && !!~value.search(/^[0-9]{4}[-]{1}[0-9]{2}[-]{1}[0-9]{2}[A-Z]{1}[0-9]{2}[:]{1}[0-9]{2}[:]{1}[0-9]{2}[\\.]{1}[0-9]{3}[A-Z]{1}$/)) {\n    return new Date(value);\n  }\n  return value;\n}"]}