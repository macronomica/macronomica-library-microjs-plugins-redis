{"version":3,"sources":["../../../../src/modules/cache/methods/get.js"],"names":["debug","require","ERROR_INFO","module","action","plugin","request","key","setCb","tags","join","log","warn","Promise","reject","property","undefined","Array","isArray","client","hgetall","then","__success","catch","err","error","res","callSetIfCallbackExists","act","JSON","parse","value","parseReviver","app","resolve","promise","search","Date"],"mappings":"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","file":"get.js","sourcesContent":["const debug = require('debug')('microjs:plugins:redis:cache:get');\nimport isString from 'lodash.isstring';\nimport isFunction from 'lodash.isfunction';\nimport { MODULE_NAME, ACTION_NAME_GET } from '../constants';\nimport { PIN_CACHE_SET } from '../pins';\nimport { PIN_TAGS_HAS } from '../../pins';\nimport internalError from '../../../errors/internal-error';\nimport propertyIsRequiredError from '../../../errors/property-is-required-error';\nimport tagsMustBeFunctionOrUndefinedError from './../errors/setCb-must-be-function-or-undefined';\nimport tagsMustBeArrayOrUndefinedError from './../errors/tags-must-be-array-or-undefined';\n\nconst ERROR_INFO = { module: MODULE_NAME, action: ACTION_NAME_GET };\n\n/**\n * Получает значение ключа из кеша\n * - если передан метод setCb вызовет получение нового значения ключа если такового нет\n *\n * @param {object} plugin         Экземпляр плагина\n * @returns {function({key?: *, setCb?: *, tags?: *}): Promise}\n */\nexport default (plugin) => (request) => {\n  const { key, setCb, tags } = request;\n  debug('Вызван метод: \"cache.get\" с параметрами: %O', { key, setCb, tags });\n  \n  debug(`Проверка свойства \"key\": !isString(key) || key === ''|| key === '*'`);\n  if (!isString(key) || key === ''|| key === '*') {\n    debug([\n      '[error] Результаты:',\n      `$1 => ${ !isString(key) }`,\n      `$2 => ${ key === '' }`,\n      `$3 => ${ key === '*' }`\n    ].join('\\n'));\n    request.log.warn(`Проверка свойства \"key\" провалилась`);\n    return Promise.reject(propertyIsRequiredError({ ...ERROR_INFO, property: 'key' }));\n  }\n  \n  debug(`Проверка свойства \"setCb\": !isFunction(setCb) && setCb !== undefined`);\n  if (!isFunction(setCb) && setCb !== undefined) {\n    debug([\n      '[error] Результаты:',\n      `$1 => ${ !isFunction(setCb) }`,\n      `$2 => ${ setCb !== undefined }`,\n    ].join('\\n'));\n    request.log.warn(`Проверка свойства \"setCb\" провалилась`);\n    return Promise.reject(tagsMustBeFunctionOrUndefinedError(ERROR_INFO));\n  }\n  \n  debug(`Проверка свойства \"tags\": !Array.isArray(tags) && tags !== undefined`);\n  if (!Array.isArray(tags) && tags !== undefined) {\n    debug([\n      '[error] Результаты:'\n      `$1 => ${ !Array.isArray(tags) }`,\n      `$2 => ${ tags !== undefined }`,\n    ].join('\\n'));\n    request.log.warn(`Проверка свойства \"tags\" провалилась`);\n    return Promise.reject(tagsMustBeArrayOrUndefinedError(ERROR_INFO));\n  }\n  \n  return plugin.client.hgetall(key)\n    .then(__success)\n    .catch(err => {\n      debug(`Поймали ошибку вызова метода \"hgetall\": `, err);\n      request.log.error('Поймали ошибку вызова метода \"hgetall\"', err);\n      throw internalError(request, err, ERROR_INFO);\n    });\n  \n  function __success(res) {\n    if (res === null) {\n      debug(`Запрашиваемый ключ \"%s\" отсутвует: %s === null`, key, res);\n      return callSetIfCallbackExists(request, { key, setCb, tags });\n    }\n    \n    debug(`Проверим актуальность тегов`);\n    return request.act({ ...PIN_TAGS_HAS, tags: JSON.parse(res.tags) })\n      .then(\n        () => {\n          debug(`Теги актуальны - парсим и возвращаем результат`);\n          return JSON.parse(res.value, parseReviver);\n        },\n        () => {\n          debug(`Теги не актуальны`);\n          return callSetIfCallbackExists(request, { key, setCb, tags });\n        }\n      );\n  }\n};\n\n/**\n * Вызывает функцию setCb если он был передан для установки нового значения ключа в кеше\n *\n * @param {app} app               Экземпляр библиотеки MicroJS\n * @param {string} key            Ключ кеша\n * @param {function} [setCb]      Функция получения нового значения\n * @param {Array<string>} [tags]  Список тегов для установки нового значения\n *\n * @returns {Promise<null|*>}     Вернет новое значение для ключа\n */\nfunction callSetIfCallbackExists(app, { key, setCb, tags }) {\n  debug('Начинаем выполнение проверки на обновление по setCb');\n  return new Promise((resolve, reject) => {\n    \n    if (!!setCb) {\n      debug('Вызываем получение результата \"setCb\"');\n      let promise = setCb(key);\n    \n      if (!promise || !('then' in promise && isFunction(promise.then))) {\n        debug('Результат не Promise - обернем его в Promise');\n        promise = Promise.resolve(promise);\n      }\n    \n      return promise\n        .then(value => {\n          debug('Результат \"setCb\" получен, ' +\n            'вызываем установку нового значения для ключа \"%s\": %O',\n            key, { ...PIN_CACHE_SET, key, value, tags }\n          );\n          return app\n            .act({ ...PIN_CACHE_SET, key, value, tags })\n            .then(() => {\n              debug('Новое значение ключа \"%s\" установлено, возвращаем его: %O', key, value);\n              return value;\n            })\n            .catch(error => {\n              debug('[error] Установка нового значения ключа \"%s\" вернуло ошибку: %O', key, error);\n              app.log.error(`Установка нового значения ключа \"${ key }\" вернуло ошибку`, error);\n              reject(error);\n            });\n        })\n        .then(resolve)\n        .catch(error => {\n          debug('[error] Вызов метода \"setCb\" вернул ошибку: %O', error);\n          app.log.error('Вызов метода \"setCb\" вернул ошибку', error);\n          reject(error);\n        });\n    }\n    \n    debug('Метод \"setCb\" не передан, вернем null');\n    return resolve(null);\n  });\n}\n\n/**\n * Функция вызывается для каждой пары ключ / значение при JSON.parse\n * - нужны чтобы корректно распарсить и восстановить дату в виде объекта Date\n *\n * @param {string} key\n * @param {*} value\n * @returns {*}\n */\nfunction parseReviver(key, value) {\n  if (!!value && !!value.search && !!~value.search(/^[0-9]{4}[-]{1}[0-9]{2}[-]{1}[0-9]{2}[A-Z]{1}[0-9]{2}[:]{1}[0-9]{2}[:]{1}[0-9]{2}[\\.]{1}[0-9]{3}[A-Z]{1}$/)) {\n    return new Date(value);\n  }\n  return value;\n}"]}