{"version":3,"sources":["../../../../src/modules/tags/methods/get-all.js"],"names":["ERROR_INFO","module","action","app","plugin","client","hgetall","then","result","Object","keys","reduce","tags","tag","assign","Number","catch","err","Promise","reject"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,aAAa,EAAEC,+BAAF,EAAuBC,uCAAvB,EAAnB;;AAEA;;;;;;;;kBAOe,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC9B;;;;;AAKA,SAAO,UAAS;AAAA;;AAEd,WAAOA,OAAOC,MAAP,CAAcC,OAAd,sBACJC,IADI,CACCC,UAAU;AACd,UAAIA,WAAW,IAAf,EAAqB;AACnB,eAAOA,MAAP;AACD;;AAED,aAAOC,OACJC,IADI,CACCF,MADD,EAEJG,MAFI,CAEG,CAACC,IAAD,EAAOC,GAAP,KAAeJ,OACpBK,MADoB,CACbF,IADa,EACP,EAAE,CAAEC,GAAF,GAASE,OAAOP,OAAQK,GAAR,CAAP,CAAX,EADO,CAFlB,EAGgD,EAHhD,CAAP;AAID,KAVI,EAWJG,KAXI,CAWEC,OAAOC,QAAQC,MAAR,CAAe,6BAAchB,GAAd,EAAmBc,GAAnB,EAAwBjB,UAAxB,CAAf,CAXT,CAAP;AAYD,GAdD;AAeD,C","file":"get-all.js","sourcesContent":["import { TAGS_KEY } from './../constants';\nimport { MODULE_NAME, ACTION_NAME_GET_ALL } from '../constants';\nimport internalError from '../../../errors/internal-error';\n\nconst ERROR_INFO = { module: MODULE_NAME, action: ACTION_NAME_GET_ALL };\n\n/**\n * Получает ключ TAGS_KEY из кеша с тегами и их текущими значениями\n *\n * @param {app} app               Экземпляр библиотеки MicroJS\n * @param {object} plugin         Экземпляр плагина\n * @returns {function({tags?: Array<string>}): Promise}\n */\nexport default (app, plugin) => {\n  /**\n   * @param {Array<string>} [tags]  Список имен тегов для получения их значений\n   *\n   * @returns {Promise<null|*|error>}\n   */\n  return ({ }) => {\n    \n    return plugin.client.hgetall(TAGS_KEY)\n      .then(result => {\n        if (result === null) {\n          return result;\n        }\n\n        return Object\n          .keys(result)\n          .reduce((tags, tag) => Object\n            .assign(tags, { [ tag ]: Number(result[ tag ]) }), {});\n      })\n      .catch(err => Promise.reject(internalError(app, err, ERROR_INFO)));\n  };\n};\n"]}