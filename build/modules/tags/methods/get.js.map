{"version":3,"sources":["../../../../src/modules/tags/methods/get.js"],"names":["ERROR_INFO","module","action","app","plugin","tags","Array","isArray","Promise","reject","length","client","hmget","then","result","catch","err"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,aAAa,EAAEC,+BAAF,EAAuBC,mCAAvB,EAAnB;;AAEA;;;;;;;;kBAOe,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC9B;;;;;AAKA,SAAO,UAAmB;AAAA,yBAAhBC,IAAgB;AAAA,QAAhBA,IAAgB,6BAAT,EAAS;;AACxB,QAAI,CAACC,MAAMC,OAAN,CAAcF,IAAd,CAAL,EAA0B;AACxB,aAAOG,QAAQC,MAAR,CAAe,+BAAqBT,UAArB,CAAf,CAAP;AACD;;AAED,QAAI,CAACK,KAAKK,MAAV,EAAkB;AAChB,aAAOF,QAAQC,MAAR,CAAe,uCAA6BT,UAA7B,CAAf,CAAP;AACD;;AAED,WAAOI,OAAOO,MAAP,CAAcC,KAAd,sBAA8B,GAAGP,IAAjC,EACJQ,IADI,CACCC,UAAUA,WAAW,IAAX,GAAkBA,MAAlB,GAA2B,qBAAQT,IAAR,EAAcS,MAAd,CADtC,EAEJC,KAFI,CAEEC,OAAOR,QAAQC,MAAR,CAAe,6BAAcN,GAAd,EAAmBa,GAAnB,EAAwBhB,UAAxB,CAAf,CAFT,CAAP;AAGD,GAZD;AAaD,C","file":"get.js","sourcesContent":["import { TAGS_KEY } from './../constants';\nimport { MODULE_NAME, ACTION_NAME_GET } from '../constants';\nimport { reduced } from './get-all';\nimport internalError from '../../../errors/internal-error';\nimport tagsMystBeArrayError from './../errors/tags-must-be-array';\nimport tagsMustBeNotEmptyArrayError from '../errors/tags-must-be-not-empty-array';\n\nconst ERROR_INFO = { module: MODULE_NAME, action: ACTION_NAME_GET };\n\n/**\n * Получает ключ TAGS_KEY из кеша с тегами и их текущими значениями\n *\n * @param {app} app               Экземпляр библиотеки MicroJS\n * @param {object} plugin         Экземпляр плагина\n * @returns {function({tags: Array<string>}): Promise}\n */\nexport default (app, plugin) => {\n  /**\n   * @param {Array<string>} tags  Список имен тегов для полуения их значений\n   *\n   * @returns {Promise<null|*|error>}\n   */\n  return ({ tags = [] }) => {\n    if (!Array.isArray(tags)) {\n      return Promise.reject(tagsMystBeArrayError(ERROR_INFO));\n    }\n  \n    if (!tags.length) {\n      return Promise.reject(tagsMustBeNotEmptyArrayError(ERROR_INFO));\n    }\n\n    return plugin.client.hmget(TAGS_KEY, ...tags)\n      .then(result => result === null ? result : reduced(tags, result))\n      .catch(err => Promise.reject(internalError(app, err, ERROR_INFO)));\n  };\n};"]}