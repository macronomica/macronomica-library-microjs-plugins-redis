{"version":3,"sources":["../../../../src/modules/tags/methods/set.js"],"names":["ERROR_INFO","module","action","plugin","request","tags","Array","isArray","Promise","reject","length","result","setDateNow","client","hmset","keys","then","catch","err","log","error","reduce","tag","Date","now","push"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,aAAa,EAAEC,+BAAF,EAAuBC,mCAAvB,EAAnB;;AAEA;;;;;;;kBAMgBC,MAAD,IAAaC,OAAD,IAAa;AAAA,sBAChBA,OADgB,CAC9BC,IAD8B;AAAA,QAC9BA,IAD8B,iCACvB,EADuB;;;AAGtC,MAAI,CAACC,MAAMC,OAAN,CAAcF,IAAd,CAAL,EAA0B;AACxB,WAAOG,QAAQC,MAAR,CAAe,+BAAqBT,UAArB,CAAf,CAAP;AACD;;AAED,MAAI,CAACK,KAAKK,MAAV,EAAkB;AAChB,WAAOF,QAAQC,MAAR,CAAe,uCAA6BT,UAA7B,CAAf,CAAP;AACD;;AAED,MAAI;AACF,UAAMW,SAASC,WAAWP,IAAX,CAAf;AACA,WAAOF,OAAOU,MAAP,CAAcC,KAAd,sBAA8B,GAAGH,OAAOI,IAAxC,EACJC,IADI,CACC,MAAML,OAAON,IADd,EAEJY,KAFI,CAEEC,OAAO;AACZd,cAAQe,GAAR,CAAYC,KAAZ,CAAkBF,GAAlB;AACA,aAAOV,QAAQC,MAAR,CAAe,6BAAcL,OAAd,EAAuBc,GAAvB,EAA4BlB,UAA5B,CAAf,CAAP;AACD,KALI,CAAP;AAMD,GARD,CAQE,OAAOkB,GAAP,EAAY;AACZd,YAAQe,GAAR,CAAYC,KAAZ,CAAkBF,GAAlB;AACA,WAAOV,QAAQC,MAAR,CAAe,6BAAcL,OAAd,EAAuBc,GAAvB,EAA4BlB,UAA5B,CAAf,CAAP;AACD;AACF,C;;AAED,SAASY,UAAT,CAAoBP,IAApB,EAA0B;AACxB,SAAOA,KAAKgB,MAAL,CAAY,CAACV,MAAD,EAASW,GAAT,KAAiB;AAClCX,WAAON,IAAP,CAAaiB,GAAb,IAAqBC,KAAKC,GAAL,EAArB;AACAb,WAAOI,IAAP,CAAYU,IAAZ,CAAiBH,GAAjB;AACAX,WAAOI,IAAP,CAAYU,IAAZ,CAAiBd,OAAON,IAAP,CAAaiB,GAAb,CAAjB;AACA,WAAOX,MAAP;AACD,GALM,EAKJ,EAAEI,MAAM,EAAR,EAAYV,MAAM,EAAlB,EALI,CAAP;AAMD","file":"set.js","sourcesContent":["import { TAGS_KEY } from './../constants';\nimport { MODULE_NAME, ACTION_NAME_SET } from '../constants';\nimport internalError from '../../../errors/internal-error';\nimport tagsMystBeArrayError from './../errors/tags-must-be-array';\nimport tagsMustBeNotEmptyArrayError from '../errors/tags-must-be-not-empty-array';\n\nconst ERROR_INFO = { module: MODULE_NAME, action: ACTION_NAME_SET };\n\n/**\n * Записывает в ключ TAGS_KEY из кеша переданные теги с новыми значениями\n *\n * @param {object} plugin         Экземпляр плагина\n * @returns {function({tags: Array<string>}): Promise}\n */\nexport default (plugin) => (request) => {\n  const { tags = [] } = request;\n  \n  if (!Array.isArray(tags)) {\n    return Promise.reject(tagsMystBeArrayError(ERROR_INFO));\n  }\n  \n  if (!tags.length) {\n    return Promise.reject(tagsMustBeNotEmptyArrayError(ERROR_INFO));\n  }\n  \n  try {\n    const result = setDateNow(tags);\n    return plugin.client.hmset(TAGS_KEY, ...result.keys)\n      .then(() => result.tags)\n      .catch(err => {\n        request.log.error(err);\n        return Promise.reject(internalError(request, err, ERROR_INFO));\n      });\n  } catch (err) {\n    request.log.error(err);\n    return Promise.reject(internalError(request, err, ERROR_INFO));\n  }\n};\n\nfunction setDateNow(tags) {\n  return tags.reduce((result, tag) => {\n    result.tags[ tag ] = Date.now();\n    result.keys.push(tag);\n    result.keys.push(result.tags[ tag ]);\n    return result;\n  }, { keys: [], tags: {} });\n}"]}