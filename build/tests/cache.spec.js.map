{"version":3,"sources":["../../src/tests/cache.spec.js"],"names":["micro","level","plugins","should","key","DATA","null","undefined","number","string","boolean","date","Date","narray","barray","sarray","before","run","then","act","after","end","describe","it","result","equal","value","be","a","setCb","Promise","all","not","resolve"],"mappings":"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","file":"cache.spec.js","sourcesContent":["import chai from 'chai';\nimport Microjs, { LEVEL_WARN } from '@microjs/microjs';\nimport Plugin, {\n  PIN_CACHE_GET,\n  PIN_CACHE_SET,\n  PIN_CACHE_HAS,\n  PIN_CACHE_DEL\n} from '../index';\n\nconst micro = Microjs({\n  level  : LEVEL_WARN,\n  plugins: [\n    Plugin({})\n  ]\n});\n\nconst should = chai.should();\nconst key = 'test-key';\nexport const DATA = {\n  null       : null,\n  'undefined': undefined,\n  number     : 1,\n  string     : 'string',\n  boolean    : true,\n  date       : new Date(),\n  narray     : [ 1, 2, 3 ],\n  barray     : [ true, false ],\n  sarray     : [ 's1', 's2', 's3' ]\n};\n\nbefore(() => micro.run()\n  .then(() => micro.act({ ...PIN_CACHE_DEL, key })));\n\nafter(() => micro.act({ ...PIN_CACHE_DEL, key })\n  .then(() => micro.end()));\n\ndescribe('cache', function() {\n\n  it('#plugin.get -> должен вернуть null', () => micro\n      .act({ ...PIN_CACHE_GET, key })\n      .then(result => should.equal(null, result))\n  );\n\n  it('#plugin.set + plugin.get -> должен вернуть объект', () =>\n    micro\n      .act({ ...PIN_CACHE_SET, key, value: DATA })\n      .then(() => micro.act({ ...PIN_CACHE_GET, key }))\n      .then(result => result.should.be.a('object'))\n      .then(() => micro.act({ ...PIN_CACHE_DEL, key }))\n      .then(() => micro.act({ ...PIN_CACHE_GET, key }))\n      .then(result => should.equal(null, result))\n      .then(() => micro.act({ ...PIN_CACHE_DEL, key }))\n  );\n\n\n  it('#plugin.read + callback -> должен вернуть объект', () => micro\n    .act({ ...PIN_CACHE_GET, key, setCb: () => DATA })\n    .then(result => should.equal(result, DATA))\n    .then(() => micro.act({ ...PIN_CACHE_GET, key }))\n    .then(result => Promise.all([\n      should.not.equal(null, result),\n      result.should.be.a('object')\n    ]))\n    .then(() => micro.act({ ...PIN_CACHE_DEL, key }))\n  );\n\n  it('#plugin.read + callback():Promise -> должен вернуть объект', () => micro\n    .act({ ...PIN_CACHE_GET, key, setCb: () => Promise.resolve(DATA) })\n    .then(result => should.equal(result, DATA))\n    .then(() => micro.act({ ...PIN_CACHE_GET, key }))\n    .then(result => Promise.all([\n      should.not.equal(null, result),\n      result.should.be.a('object')\n    ]))\n    .then(() => micro.act({ ...PIN_CACHE_DEL, key })));\n});"]}