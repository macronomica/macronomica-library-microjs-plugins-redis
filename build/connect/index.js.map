{"version":3,"sources":["../../src/connect/index.js"],"names":["debug","require","app","plugin","settings","Promise","resolve","reject","client","createClient","retry_strategy","on","error","log","id","emit","proxy","info"],"mappings":";;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAJA,MAAMA,QAAQC,QAAQ,OAAR,EAAiB,+BAAjB,CAAd;;kBAMe,UAACC,GAAD,EAAMC,MAAN,EAAgC;AAAA,MAAlBC,QAAkB,uEAAP,EAAO;;AAC7CJ,QAAM,wBAAN;AACA,SAAO,IAAIK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,UAAM,qCAAN,EAA6CI,QAA7C;AACA,UAAMI,SAAS,gBAAMC,YAAN;AACbC;AADa,OAEVN,QAFU,EAAf;;AAKAI,WACGG,EADH,CACM,OADN,EACeC,SAAS;AACpBZ,YAAM,oBAAN,EAA4BY,KAA5B;AACA,aAAOV,IAAIW,GAAJ,CAAQD,KAAR,CAAcA,KAAd,CAAP;AACD,KAJH,EAKGD,EALH,CAKM,OALN,EAKeC,SAAS;AACpB,UAAIA,KAAJ,EAAW;AACTZ,cAAM,oCAAN,EAA4CY,KAA5C;AACAV,YAAIW,GAAJ,CAAQD,KAAR,CAAe,6BAAf,EAA6C,EAAET,mBAAUW,IAAIX,OAAOW,EAArB,IAA4BV,QAA5B,CAAF,EAA0CQ,KAA1C,EAA7C;AACAV,YAAIa,IAAJ,kCAA+BH,KAA/B;AACA,eAAOL,OAAOK,KAAP,CAAP;AACD;;AAED,YAAMI,QAAQ,qBAAYR,MAAZ,CAAd;;AAEAR,YAAM,yDAAN;AACAE,UAAIW,GAAJ,CAAQI,IAAR,CAAc,8BAAd,EAA6C,EAAEd,mBAAUW,IAAIX,OAAOW,EAArB,IAA4BV,QAA5B,CAAF,EAA7C;;AAEAJ,YAAM,sBAAN;AACAE,UAAIa,IAAJ,4BAAyBC,KAAzB;;AAEAhB,YAAM,0BAAN;AACAM,cAAQU,KAAR;AACD,KAvBH;AAwBD,GA/BM,CAAP;AAgCD,C","file":"index.js","sourcesContent":["const debug = require('debug')('microjs:plugins:redis:connect');\nimport redis from 'redis';\nimport proxyClient from './proxy';\nimport retryStrategy from './retry-strategy';\nimport { EVENTS_CONNECT, EVENTS_CONNECT_ERROR } from './../constants';\n\nexport default (app, plugin, settings = {}) => {\n  debug('Вызван метод \"connect\"');\n  return new Promise((resolve, reject) => {\n    debug('Иницируем клиента с настройками: %O', settings);\n    const client = redis.createClient({\n      retry_strategy: retryStrategy,\n      ...settings\n    });\n  \n    client\n      .on(\"error\", error => {\n        debug('Ошибка клиента: %O', error);\n        return app.log.error(error);\n      })\n      .on(\"ready\", error => {\n        if (error) {\n          debug('При подключении клиента ошибка: %O', error);\n          app.log.error(`Ошибка подключения к Redis:`, { plugin: { id: plugin.id, ...settings }, error });\n          app.emit(EVENTS_CONNECT_ERROR, error);\n          return reject(error);\n        }\n        \n        const proxy = proxyClient(client);\n        \n        debug('Создано подключение к Redis, сообщаем об этом в консоль');\n        app.log.info(`Создано подключение к Redis:`, { plugin: { id: plugin.id, ...settings } });\n        \n        debug('Вызываем событие: %s', EVENTS_CONNECT);\n        app.emit(EVENTS_CONNECT, proxy);\n  \n        debug('Вызываем resolve c proxy');\n        resolve(proxy);\n      });\n  })\n};"]}