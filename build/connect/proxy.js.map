{"version":3,"sources":["../../src/connect/proxy.js"],"names":["debug","require","client","Proxy","get","target","property","rest","Promise","resolve","reject","error","result"],"mappings":";;;;;;AACA;;;;;;AADA,MAAMA,QAAQC,QAAQ,OAAR,EAAiB,6BAAjB,CAAd;;kBAGeC,UAAU;AACvBF,QAAM,mCAAN;AACA,SAAO,IAAIG,KAAJ,CAAUD,MAAV,EAAkB;AACvBE,QAAIC,MAAJ,EAAYC,QAAZ,EAAsB;AACpB,UAAI,sBAAWD,OAAQC,QAAR,CAAX,CAAJ,EAAoC;AAClC,eAAO,YAAa;AAAA,4CAATC,IAAS;AAATA,gBAAS;AAAA;;AAClB,iBAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;;AAEtCV,kBAAM,0CAAN,EAAkDM,QAAlD;AACAD,mBAAQC,QAAR,EAAmB,GAAGC,IAAtB,EAA4B,CAACI,KAAD,EAAQC,MAAR,KAAmB;AAC7C,kBAAID,KAAJ,EAAW;AACTX,sBAAM,WAAN,EAAmBW,KAAnB;AACA,uBAAOD,OAAOC,KAAP,CAAP;AACD;;AAEDX,oBAAM,aAAN,EAAqBY,MAArB;AACAH,sBAAQG,MAAR;AACD,aARD;AASD,WAZM,CAAP;AAaD,SAdD;AAeD;;AAEDZ,YAAM,8CAAN,EAAsDM,QAAtD;AACA,aAAOD,OAAQC,QAAR,CAAP;AACD;AAtBsB,GAAlB,CAAP;AAwBD,C","file":"proxy.js","sourcesContent":["const debug = require('debug')('microjs:plugins:redis:proxy');\nimport isFunction from 'lodash.isfunction';\n\nexport default client => {\n  debug('Создаем Proxy для методов клиента');\n  return new Proxy(client, {\n    get(target, property) {\n      if (isFunction(target[ property ])) {\n        return (...rest) => {\n          return new Promise((resolve, reject) => {\n          \n            debug('Вызываем оригинальный метод \"%s\" клиента', property);\n            target[ property ](...rest, (error, result) => {\n              if (error) {\n                debug('error: %O', error);\n                return reject(error);\n              }\n            \n              debug('success: %O', result);\n              resolve(result);\n            });\n          });\n        };\n      }\n      \n      debug('Возвращаем оригинальное значение клиента: %s', property);\n      return target[ property ];\n    }\n  });\n};"]}